"""
Django settings for car_diagnosis project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os 
from datetime import timedelta



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-c82y616%c4l+#*+n=m*qx3s(^vjxzi^%r!748to=76-$i78ot)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True



# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    'django_crontab',
    'channels',
    'django_jalali',
    'rest_framework',
    'rest_framework_simplejwt',
    'crispy_forms',
    'crispy_bootstrap4',
    'core',
    'corsheaders',
    'django_select2',
    'django_ckeditor_5',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # برای استفاده از JWT
    ]
}




MIDDLEWARE = [
    'django.middleware.locale.LocaleMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'core.middleware.CurrentUserMiddleware',
]

ROOT_URLCONF = 'car_diagnosis.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                # context processors پیش‌فرض جنگو
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # context processor جدید
                'core.context_processors.user_id',
            ],
        },
    },
]

WSGI_APPLICATION = 'car_diagnosis.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),  # عمر توکن دسترسی
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),     # عمر توکن رفرش
    'AUTH_HEADER_TYPES': ('Bearer',),               # نحوه ارسال توکن در هدر
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'fa'

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_L10N=True

USE_TZ = True

DEFAULT_CHARSET = 'utf-8'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

#STATIC_URL = 'static/'


STATIC_URL = '/staticfiles/'
STATICFILES_DIRS = [BASE_DIR / 'core/static']


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
STATIC_ROOT = BASE_DIR / 'staticfiles'
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap4'
CRISPY_TEMPLATE_PACK = 'bootstrap4'




customColorPalette = [
        {
            'color': 'hsl(4, 90%, 58%)',
            'label': 'Red'
        },
        {
            'color': 'hsl(340, 82%, 52%)',
            'label': 'Pink'
        },
        {
            'color': 'hsl(291, 64%, 42%)',
            'label': 'Purple'
        },
        {
            'color': 'hsl(262, 52%, 47%)',
            'label': 'Deep Purple'
        },
        {
            'color': 'hsl(231, 48%, 48%)',
            'label': 'Indigo'
        },
        {
            'color': 'hsl(207, 90%, 54%)',
            'label': 'Blue'
        },
    ]



CKEDITOR_5_CONFIGS = {
    'default': {
        'extraPlugins': 'embed,embedbase,iframe',
        'toolbar': ['heading', '|', 'bold', 'italic', 'link',
                    'bulletedList', 'numberedList', 'blockQuote', 'imageUpload' , 'mediaEmbed', 'htmlEmbed' ],
        'allowedContent': True,
        'extraAllowedContent': 'iframe[*]; div[*]; script[*]; span[*]; style[*]',
        'mediaEmbed': {
            'previewsInData': True,  # نمایش پیش‌نمایش ویدیو
            'providers': [
                {
                    'name': 'aparat',
                    'url': [
                        {
                            'pattern': r'^https://www\.aparat\.com/v/(\w+)',
                            'embedUrl': 'https://www.aparat.com/video/video/embed/videohash/{id}',
                        }
                    ],
                },
                # سایر سایت‌ها
            ],
        },
        'htmlEmbed': {
            'showPreviews': True,  # نمایش پیش‌نمایش کدهای HTML
        },

        'allowedContent': True,
        'extraAllowedContent': 'iframe[*]; div[*]; script[*]; span[*]; style[*]',
    },
    'extends': {
        'language': 'fa',
        'blockToolbar': [
            'paragraph', 'heading1', 'heading2', 'heading3',
            '|',
            'bulletedList', 'numberedList',
            '|',
            'blockQuote',
        ],
        'toolbar': ['heading', '|', 'outdent', 'indent', '|', 'bold', 'italic', 'link', 'underline', 'strikethrough',
        'code','subscript', 'superscript', 'highlight', '|', 'codeBlock', 'sourceEditing', 'insertImage',
                    'bulletedList', 'numberedList', 'todoList', '|',  'blockQuote', 'imageUpload', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'mediaEmbed', 'htmlEmbed', 'removeFormat',
                    'insertTable',],
        'image': {
            'toolbar': ['imageTextAlternative', '|', 'imageStyle:alignLeft',
                        'imageStyle:alignRight', 'imageStyle:alignCenter', 'imageStyle:side',  '|'],
            'styles': [
                'full',
                'side',
                'alignLeft',
                'alignRight',
                'alignCenter',
            ]

        },
        'table': {
            'contentToolbar': [ 'tableColumn', 'tableRow', 'mergeTableCells',
            'tableProperties', 'tableCellProperties' ],
            'tableProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            },
            'tableCellProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            }
        },
        'heading' : {
            'options': [
                { 'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph' },
                { 'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1' },
                { 'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2' },
                { 'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3' }
            ]
        },
        'mediaEmbed': {
            'previewsInData': True,  # نمایش پیش‌نمایش ویدیو
            'providers': [
                {
                    'name': 'aparat',
                    'url': [
                        {
                            'pattern': r'^https://www\.aparat\.com/v/(\w+)',
                            'embedUrl': 'https://www.aparat.com/video/video/embed/videohash/{id}',
                        }
                    ],
                },
                # سایر سایت‌ها
            ],
        },
        'htmlEmbed': {
            'showPreviews': True,  # نمایش پیش‌نمایش کدهای HTML
        },
        'allowedContent': True,
        'extraAllowedContent': 'iframe[*]; div[*]; script[*]; span[*]; style[*]',
    },
    'list': {
        'properties': {
            'styles': 'true',
            'startIndex': 'true',
            'reversed': 'true',
        }
    },
}



# Define a constant in settings.py to specify file upload permissions
CKEDITOR_5_FILE_UPLOAD_PERMISSION = "any"  # Possible values: "staff", "authenticated", "any"

CKEDITOR_5_UPLOADS = {
    'image/*': ['jpg', 'JPG', 'jpeg', 'JPEG', 'png', 'gif', 'bmp'],
}
AUTH_USER_MODEL = 'core.CustomUser'

LOGIN_URL = '/login/'

ALLOWED_HOSTS = ['django-noxeas.chbk.app', '192.168.172.169', 'localhost', '127.0.0.1']




CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
        "LOCATION": "unique-snowflake",
    },
    "select2": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/2",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "TIMEOUT": 3600,  # Define timeout as 1 hour
            "KEY_PREFIX": "select2",  # Optional: define a prefix for keys to avoid collisions
            # You can add more options if necessary
        }
    }
}

# Tell select2 which cache configuration to use:
SELECT2_CACHE_BACKEND = "select2"


REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer', # or whatever renderer you need
    ),
    'DEFAULT_CHARSET':'utf-8',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 10,  # تعداد آیتم‌ها در هر بار لود شدن
}

CSRF_TRUSTED_ORIGINS = [
    'https://django-noxeas.chbk.app',
    'http://127.0.0.1:8000/'
    # Add more trusted origins if necessary
]



LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',  
            'class': 'logging.FileHandler',
            'filename': 'debug.log',  # تغییر نام فایل
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG', 
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO', 
            'propagate': True,
        },
        'core': { 
            'handlers': ['file', 'console'],
            'level': 'DEBUG', 
            'propagate': False,
        },
        'payment_gateway': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}


ZARINPAL_MERCHANT_ID = '5318de7a-497c-4397-a182-b49a5890e2a3'


CORS_ALLOW_ALL_ORIGINS = True



CORS_ALLOW_METHODS = [
    "GET",
    "POST",
    "PUT",
    "PATCH",
    "DELETE",
    "OPTIONS",
]


CORS_ALLOW_HEADERS = [
    "content-type",
    "authorization",
]


ASGI_APPLICATION = 'car_diagnosis.asgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    },
}

# SESSION_COOKIE_AGE = 15 * 60  


ZARINPAL_SANDBOX = False  

LIMOSMS_API_KEY = os.getenv('sms', '')

# 2. اطمینان از رشته بودن (حتی اگر None باشد)
if LIMOSMS_API_KEY is None:
    LIMOSMS_API_KEY = ''
else:
    LIMOSMS_API_KEY = str(LIMOSMS_API_KEY)  # تبدیل صریح به رشته

# 3. بررسی وجود کلید
if not LIMOSMS_API_KEY.strip():
    raise ValueError("کلید API پیامک تنظیم نشده است")


CRONJOBS = [
    ('0 0 * * *', 'core.management.commands.check_subscriptions.Command')
]

LANGUAGES = [
    ('fa', 'Persian'),
]


JALALI_SETTINGS = {
    'ADMIN_JS_STATIC_FILES': [
        'admin/jquery.ui.datepicker.jalali/scripts/jquery-1.10.2.min.js',
        'admin/jquery.ui.datepicker.jalali/scripts/jquery.ui.core.js',
        'admin/jquery.ui.datepicker.jalali/scripts/jquery.ui.datepicker-cc.js',
        'admin/jquery.ui.datepicker.jalali/scripts/calendar.js',
        'admin/jquery.ui.datepicker.jalali/scripts/jquery.ui.datepicker-cc-fa.js',
    ],
    'ADMIN_CSS_STATIC_FILES': {
        'all': [
            'admin/jquery.ui.datepicker.jalali/themes/base/jquery-ui.min.css',
        ]
    },
}
